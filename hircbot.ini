; This is a configuration mockup: nothing here has been implemented,
; and is a testbed for ideas for a future configuration system for hircbot.

[Aliases]
MSG = PRIVMSG
RESPOND = PRIVMSG {C:CSource}

[INIT]
Server = irc.freenode.net
Port = 6667
User = HIRCBOT
Nick = hircbot
Pass = 

[Event::OnConnect]
= >> PRIVMSG NickServ IDENTIFY {INIT:Nick} {INIT:Pass}
= >> JOIN ##rochack

[Event::OnCommand]
SAY = >> RESPOND {C:ArgRest}
WHOAMI = whoami {C:User:Nick}
CTEST = >> RESPOND Test response line 1: \
           Here is the name in my config: {INIT:Nick} Here is the name I'm using: {STATE:Nick}
      = >> RESPOND Test response line 2: \
           Here are the raw arguments to this command {C:ArgRest}

; grammer for INI:
; S -> GroupList
; GroupList -> '[' GroupID ']' WS FieldList
; FieldList -> WS Field WS FieldList
; Field -> Key S '=' S Value
; GroupID = WORD
; Key = eps | WORD
; Value -> eps | STRING ValueTail
; ValueTail -> eps | '\' WS STRING ValueTail
; S = ' ' S | '\t' S | eps
; WS = S WS | '\n' WS | '\r' WS | eps
; STRING = WORD S STRING | eps
; WORD = ANP WORD | eps
; ANP = any alphanumeric or punctionation character
;
; usage:
; [Aliases] specifies any replacements to be made before processing any key/value in rest of document
; [INIT] specifies IRCStateConfig settings (currently: Server Port User Nick Pass)
; [Event::<Action>] specifies handling of events, where key is: event associated string
; For OnConnect:
; only valid key is "", meaning things to do when OnConnect is fired
; For OnCommand:
; all keys register commands to their responses
;
; All event values are lists of actions to do:
; Values beginning with ">>" cause that IRC command to be sent
; Other values cause the specified function to be evaluated.

